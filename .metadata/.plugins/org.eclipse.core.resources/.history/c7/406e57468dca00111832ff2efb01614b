package br.com.saodimas.view.components.panel.obito;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JToolBar;

import br.com.saodimas.model.beans.ObitoVO;
import br.com.saodimas.relatorio.GeradorRelatorio;
import br.com.saodimas.relatorio.NomeRelatorio;
import br.com.saodimas.view.components.iframe.ConsObitoIFrame;
import br.com.saodimas.view.components.panel.BarraNotificacao;
import br.com.saodimas.view.components.panel.CustomLayeredPanel;
import br.com.saodimas.view.components.table.ObitoConsultaTable;
import br.com.saodimas.view.components.table.model.EmprestimoEquipamentoTableModel;
import br.com.saodimas.view.components.table.model.ObitoConsultaTableModel;
import br.com.saodimas.view.components.table.model.ObitoTableModel;

@SuppressWarnings("serial")
public class ObitoMainPanel extends CustomLayeredPanel {
	public static final String FORM_NAME = "Controle de Obitos"; 
	public static final String MENSAGEM_PADRAO = "Controle de Óbitos";

	private BarraNotificacao barNotificacao;
	private JToolBar barControle;
	private JButton btnImprimir;
	private JButton btPesquisar;
	private JButton btVisualizar;
			
	private ObitoConsultaTable tbObito = new ObitoConsultaTable();
		
	private static final Dimension DBUTTON = new Dimension(30,30);
	
	private ConsObitoIFrame iframeConsultaObito;
	
	public ObitoMainPanel(){
		initialize();
		configure();
	}
	
	public ObitoMainPanel getPainelPrincipal() {
		Component c = getParent();
		while (c != null) {
			if (c instanceof ObitoMainPanel)
				return (ObitoMainPanel) c;
			c = c.getParent();
		}
		return (ObitoMainPanel) c;
	}

	@Override
	public void setEnabled(boolean enabled) {
		barControle.setEnabled(enabled);
		tbObito.setEnabled(enabled);
		super.setEnabled(enabled);
	}
	
	@Override
	public void setVisible(boolean visible) {
		super.setVisible(visible);
		if (visible){
			
			barNotificacao.mostrarMensagem("", BarraNotificacao.DICA);
			this.iframeConsultaObito.setVisible(true);
		}
	}

	private void initialize() {
		barNotificacao = new BarraNotificacao("");
		int x = getDesktop().getWidth() / 2;
		int y = getDesktop().getHeight() / 2;
		
		iframeConsultaObito = new ConsObitoIFrame(){
			@Override
			public void setVisible(boolean flag) {
				if (getGlass() != null) getGlass().setVisible(flag);
				super.setVisible(flag);
			}
		};
		iframeConsultaObito.setLocation(x -iframeConsultaObito.getSize().width / 2, y - iframeConsultaObito.getSize().height / 2);
				
		getDesktop().add(iframeConsultaObito);
				
		tbObito = new ObitoConsultaTable();
		
		btnImprimir = new JButton();
		btnImprimir.setIcon(new ImageIcon("imagens/imprimir.gif"));
		btnImprimir.addActionListener(new EventoBotaoControle());
		btnImprimir.setToolTipText("Imprimir listagem emprestimo");
		btnImprimir.setPreferredSize(DBUTTON);
		

		btPesquisar = new JButton();
		btPesquisar.setIcon(new ImageIcon("imagens/search.gif"));
		btPesquisar.addActionListener(new EventoBotaoControle());
		btPesquisar.setToolTipText("Pesquisar");
		btPesquisar.setPreferredSize(DBUTTON);
		
		btVisualizar.setIcon(new ImageIcon("imagens/search.gif"));
		btVisualizar.addActionListener(new EventoBotaoControle());
		btVisualizar.setToolTipText("Visualizar!");
		btVisualizar.setPreferredSize(DBUTTON);
		btVisualizar.setEnabled(false);
		btVisualizar.addKeyListener(tbObito.getKeyListeners()[0]);
		
		barControle = new JToolBar();
		barControle.setFloatable(false);
		barControle.setOpaque(false);
		barControle.setBorderPainted(false);
		barControle.setBorder(BorderFactory.createEmptyBorder());
		barControle.setMargin(new Insets(0, 0, 0, 0));
		barControle.add(btPesquisar);
		barControle.add(btnImprimir);
		barControle.add(btVisualizar);
		

	}
	
	private void configure() {
		GridBagConstraints c = new GridBagConstraints();
		JPanel infColaborador = new JPanel(new GridBagLayout());

		c.anchor = GridBagConstraints.LAST_LINE_START;
		c.fill = GridBagConstraints.HORIZONTAL;
		c.insets = new Insets(0, 1, 0, 1);
		c.weightx = 1;
		c.weighty = 0;
		c.gridx = 0;
		c.gridy = 0; infColaborador.add(barControle, c);
		
		JScrollPane depPanel = new JScrollPane(tbObito);
		depPanel.setBorder(BorderFactory.createLineBorder(Color.GRAY));
		
		c.anchor = GridBagConstraints.FIRST_LINE_START;
		c.fill = GridBagConstraints.BOTH;
		c.weightx = 1;
		c.weighty = 1;
		c.gridx = 0;
		c.gridy = 1; infColaborador.add(depPanel, c);
		
		infColaborador.setBorder(BorderFactory.createTitledBorder("Controle de Óbitos"));
		
		JPanel panelPrincipal = new JPanel(new GridBagLayout()); 
		c = new GridBagConstraints();
		
		c.anchor = GridBagConstraints.CENTER;
		c.fill = GridBagConstraints.HORIZONTAL;
		c.insets = new Insets(1, 1, 1, 1);
		c.weightx = 1;
		c.weighty = 0;
		c.gridx = 0;
		c.gridy = 0; panelPrincipal.add(barNotificacao, c);

		c.anchor = GridBagConstraints.FIRST_LINE_START;
		c.fill = GridBagConstraints.BOTH;
		c.weightx = 1;
		c.weighty = 1;
		c.gridx = 0;
		c.gridy = 1; panelPrincipal.add(infColaborador, c);

		getPainelPrincipal().add(panelPrincipal, BorderLayout.CENTER);
	}
	
	public void mostrarMensagem(final String mensagem, final int tipoMensagem) {
		barNotificacao.mostrarMensagem(mensagem, tipoMensagem);
	}
	
	public ConsObitoIFrame getIFrameConsObito() {
		return iframeConsultaObito;
	}
	
	public void carregarObitoTable(List<ObitoVO> list)
	{
		((ObitoConsultaTableModel)tbObito.getModel()).loadData(list);
	}
	

	
	private class EventoBotaoControle implements ActionListener{
		public void actionPerformed(ActionEvent e) {
			ObitoMainPanel c = getPainelPrincipal();
			
			if (e.getSource() == btnImprimir){
				new GeradorRelatorio().gerar(NomeRelatorio.RELATORIO_EMPRESTIMO_EQUIPAMENTO, ((EmprestimoEquipamentoTableModel)tbObito.getModel()).getList()); 
				
			}
			
			if (e.getSource() == btPesquisar){
				iframeConsultaObito.setVisible(true);
				iframeConsultaObito.habilitarControles(false); 
				
			}
			
			if (e.getSource() == btVisualizar){
				int row = tbObito.getSelectedRow();
				ObitoTableModel model = (ObitoTableModel) tbObito.getModel();
				ObitoVO obi = (ObitoVO) model.getSelectedValue(row);
				c.getIframeObito().setObito(obi);
				c.getIframeObito().setVisible(true);
				c.getIframeObito().habilitarControles(false);
				c.getIframeObito().setConfigVisualizarObito(true);
				
			}
		}
	}

}
