package br.com.saodimas.relatorio;

import java.io.InputStream;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.swing.JOptionPane;

import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import br.com.saodimas.model.beans.ApoliceVO;
import br.com.saodimas.model.beans.AssociadoVO;
import br.com.saodimas.model.beans.FaturaVO;
import br.com.saodimas.model.beans.ObitoVO;
import br.com.saodimas.model.beans.ProdutoObitoVO;
import br.com.saodimas.model.beans.ServicoObitoVO;

public class GeradorRelatorio {

	
	@SuppressWarnings("unchecked")
	public void gerar(String nomeRelatorio, List listaObjetos) {

			
		// Stream com o .jasper
		InputStream relJasper = getClass().getResourceAsStream(nomeRelatorio);

		// O datasource
		JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(listaObjetos);

		// Parametros do relatorios
		Map parametros = new HashMap();

		JasperPrint impressao = null;
		try {
			impressao = JasperFillManager.fillReport(relJasper, parametros, ds);
			JasperViewer viewer = new JasperViewer(impressao, false);
			viewer.setVisible(true);

		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, "Erro ao gerar o relatório, contate o administrador do sistema: "+e.getMessage(), "erro", JOptionPane.ERROR_MESSAGE );
		}


	}
	
	
	
	@SuppressWarnings("unchecked")
	public void gerarComSubRelatorioDependentes(String nomeRelatorio, List<ApoliceVO> listaObjetos) {

			
		// Stream com o .jasper
		InputStream relJasper = getClass().getResourceAsStream(nomeRelatorio);

		// O datasource
		JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(listaObjetos);

		// Parametros do relatorios
		Map parametros = new HashMap();
		
		ApoliceVO apolice = listaObjetos != null? listaObjetos.get(0) : null;
		
		if(apolice!= null)
		{
			Set<AssociadoVO> set = new HashSet<AssociadoVO>(apolice.getDependentes()); 
			parametros.put("COLECAO_DEPENDENTES", set);
		}
			
		
		JasperPrint impressao = null;
		try {
			impressao = JasperFillManager.fillReport(relJasper, parametros, ds);
			JasperViewer viewer = new JasperViewer(impressao, false);
			viewer.setVisible(true);

		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, "Erro ao gerar o relatório, contate o administrador do sistema: "+e.getMessage(), "erro", JOptionPane.ERROR_MESSAGE );
		}


	}
	
	
	@SuppressWarnings("unchecked")
	public void gerarComSubRelatorioObito(String nomeRelatorio, List<ObitoVO> listaObjetos) {

			
		// Stream com o .jasper
		InputStream relJasper = getClass().getResourceAsStream(nomeRelatorio);

		// O datasource
		JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(listaObjetos);

		// Parametros do relatorios
		Map parametros = new HashMap();
		
		ObitoVO obito = listaObjetos != null? listaObjetos.get(0) : null;
		
		if(obito!= null)
		{
			List<ProdutoObitoVO> list = obito.getProdutos(); 
			parametros.put("COLECAO_PRODUTOS", list);
			
			List<ServicoObitoVO> listS = obito.getServicos(); 
			parametros.put("COLECAO_SERVICOS", listS);
		}
			
		
		JasperPrint impressao = null;
		try {
			impressao = JasperFillManager.fillReport(relJasper, parametros, ds);
			JasperViewer viewer = new JasperViewer(impressao, false);
			viewer.setVisible(true);

		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, "Erro ao gerar o relatório, contate o administrador do sistema: "+e.getMessage(), "erro", JOptionPane.ERROR_MESSAGE );
		}


	}
	
	@SuppressWarnings("unchecked")
	public void gerarComSubRelatorioFinanceiro(String nomeRelatorio, List<ApoliceVO> listaObjetos) {

			
		// Stream com o .jasper
		InputStream relJasper = getClass().getResourceAsStream(nomeRelatorio);

		// O datasource
		JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(listaObjetos);

		// Parametros do relatorios
		Map parametros = new HashMap();
		
		ApoliceVO apolice = listaObjetos != null? listaObjetos.get(0) : null;
		
		if(apolice!= null)
		{
			List<FaturaVO> l = apolice.getFaturas();
			Collections.sort(l);
			parametros.put("COLECAO_FATURAS", l);
		}
			
		
		JasperPrint impressao = null;
		try {
			impressao = JasperFillManager.fillReport(relJasper, parametros, ds);
			JasperViewer viewer = new JasperViewer(impressao, false);
			viewer.setVisible(true);

		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, "Erro ao gerar o relatório, contate o administrador do sistema: "+e.getMessage(), "erro", JOptionPane.ERROR_MESSAGE );
		}


	}
	
	@SuppressWarnings("unchecked")
	public void gerarCarteirinhasDependentes(String nomeRelatorio, List<ApoliceVO> listaObjetos) {

			
		// Stream com o .jasper
		InputStream relJasper = getClass().getResourceAsStream(nomeRelatorio);

		// O datasource
		JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(listaObjetos);

		// Parametros do relatorios
		Map parametros = new HashMap();
		
		ApoliceVO apolice = listaObjetos != null? listaObjetos.get(0) : null;
		
		if(apolice!= null)
		{
			List<AssociadoVO> l = apolice.getDependentes();
			Collections.sort(l);
			parametros.put("DEPEDE", l);
		}
			
		
		JasperPrint impressao = null;
		try {
			impressao = JasperFillManager.fillReport(relJasper, parametros, ds);
			JasperViewer viewer = new JasperViewer(impressao, false);
			viewer.setVisible(true);

		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, "Erro ao gerar o relatório, contate o administrador do sistema: "+e.getMessage(), "erro", JOptionPane.ERROR_MESSAGE );
		}


	}
	

}
