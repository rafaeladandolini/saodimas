package br.com.saodimas.view.components.panel.apolice;

import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;

import javax.swing.AbstractButton;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JToolBar;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import br.com.saodimas.controller.Controller;
import br.com.saodimas.model.beans.ApoliceVO;
import br.com.saodimas.model.exception.MensagemSaoDimasException;
import br.com.saodimas.relatorio.GeradorRelatorio;
import br.com.saodimas.view.components.frame.FramePrincipal;
import br.com.saodimas.view.components.iframe.ApoliceIFrame;
import br.com.saodimas.view.components.iframe.ConsApoliceIFrame;
import br.com.saodimas.view.components.iframe.ConsRelatorioApoliceIFrame;
import br.com.saodimas.view.components.iframe.DependenteIFrame;
import br.com.saodimas.view.components.iframe.FaturaIFrame;
import br.com.saodimas.view.components.panel.BarraNotificacao;
import br.com.saodimas.view.components.panel.CustomLayeredPanel;
import br.com.saodimas.view.components.panel.apolice.editar.ApoliceEditarMainPanel;
import br.com.saodimas.view.components.table.ApoliceTable;
import br.com.saodimas.view.components.table.model.ApoliceTableModel;

@SuppressWarnings("serial")
public class ApoliceMainPanel extends CustomLayeredPanel {
	public static final String FORM_NAME = "Apólices"; 
	public static final String MENSAGEM_PADRAO = "   Pressione a tecla [F3] para Pesquisar, [INSERT] para Cadastrar e [ENTER] ou [DELETE] para editar/excluir a apólice selecionada!";
	
	private BarraNotificacao barNotificacao;
	private JButton btPesquisar;
	private JButton btNovo;
	private JButton btEditar;
	private JButton btExcluir;
	private JButton btDetalhar;
	private JButton btRelatorio;
	private JToolBar barControle;
	
	private ApoliceTable tbApolices;
	private ApoliceIFrame iframeApolice;
	private ConsApoliceIFrame iframeConsultaApolice;
	private ConsRelatorioApoliceIFrame iframeConsultaRelatorioApolice;
	public ConsRelatorioApoliceIFrame getIframeConsultaRelatorioApolice() {
		return iframeConsultaRelatorioApolice;
	}

	private DependenteIFrame iframeDependente;
	private FaturaIFrame iframeFatura;
	
	private AbstractButton ultimoComando;
	
	private static final Dimension DBUTTON = new Dimension(30,30);
	
	public ApoliceMainPanel(){
		initialize();
		configure();
	}
	
	public ApoliceIFrame getIframeApolice() {
		return iframeApolice;
	}

	public ConsApoliceIFrame getIframeConsultaApolice() {
		return iframeConsultaApolice;
	}
	
	public FaturaIFrame getIframeFatura() {
		return iframeFatura;
	}

	public DependenteIFrame getIframeDependente() {
		return iframeDependente;
	}	
	
	public void selecionaUltimoComando(){
		if (ultimoComando != null){
			if (ultimoComando != btEditar && ultimoComando != btExcluir){
				tbApolices.getSelectionModel().clearSelection();
				ultimoComando.requestFocus();
			}
			else tbApolices.requestFocus();
		}
	}
	
	public void mostrarMensagem(String msg, int tipo){
		barNotificacao.mostrarMensagem(msg, tipo);
	}
	
	public void salvarApolice(ApoliceVO a) throws MensagemSaoDimasException{
		a = Controller.getInstance().insertApolice(a);
		loadEditaPanelApolice(a);
	}
	
	public void limparModel()
	{
		((ApoliceTableModel)tbApolices.getModel()).removeAll();
	}
	
	public void carregarApoliceTable(List<ApoliceVO> list)
	{
		((ApoliceTableModel)tbApolices.getModel()).loadData(list);
	}
	
	@Override
	public void setEnabled(boolean enabled) {
		btPesquisar.setEnabled(enabled);
		btNovo.setEnabled(enabled);
		btEditar.setEnabled(enabled && tbApolices.getSelectedRow() > -1);
		btExcluir.setEnabled(enabled && tbApolices.getSelectedRow() > -1);
		barControle.setEnabled(enabled);
		tbApolices.setEnabled(enabled);
		super.setEnabled(enabled);
	}

	@Override
	public void setVisible(boolean visible) {
		super.setVisible(visible);
		if (visible){
			ultimoComando = btPesquisar;
			selecionaUltimoComando();
			if (ultimoComando == btPesquisar && tbApolices.getRowCount() == 0){
				iframeConsultaApolice.setVisible(true);
				iframeConsultaApolice.habilitarControles(false);				
			}
		}
	}

	private void initialize() {
		barNotificacao = new BarraNotificacao(MENSAGEM_PADRAO);
		int x = getDesktop().getWidth() / 2;
		int y = getDesktop().getHeight() / 2;
		
		iframeDependente = new DependenteIFrame(){
			@Override
			public void setVisible(boolean flag) {
				if (!flag) selecionaUltimoComando();
				super.setVisible(flag);
				this.habilitarControles(false);
			}
		};
		iframeDependente.setLocation(x - iframeDependente.getSize().width / 2, y - iframeDependente.getSize().height / 2);
		
		iframeFatura = new FaturaIFrame(){
			@Override
			public void setVisible(boolean flag) {
				if (!flag) selecionaUltimoComando();
				super.setVisible(flag);
				this.habilitarControles(false);
			}
		};
		iframeFatura.setLocation(x - iframeFatura.getSize().width / 2, y - iframeFatura.getSize().height / 2);
		
		iframeConsultaApolice = new ConsApoliceIFrame(){
			@Override
			public void setVisible(boolean flag) {
				if (getGlass() != null) getGlass().setVisible(flag);
				if (!flag) selecionaUltimoComando();
				super.setVisible(flag);
			}
		};
		iframeConsultaApolice.setLocation(x - iframeConsultaApolice.getSize().width / 2, y - iframeConsultaApolice.getSize().height / 2);
		
		iframeApolice = new ApoliceIFrame(){
			@Override
			public void setVisible(boolean flag) {
				if (getGlass() != null) getGlass().setVisible(flag);
				if (!flag) selecionaUltimoComando();
				if (flag == false){
					iframeDependente.setVisible(false);
					iframeFatura.setVisible(false);
				} 
				super.setVisible(flag);
			}
		};
		iframeApolice.setLocation(x - iframeApolice.getSize().width / 2, y - iframeApolice.getSize().height / 2);
		
		iframeConsultaApolice = new ConsApoliceIFrame(){
			@Override
			public void setVisible(boolean flag) {
				if (getGlass() != null) getGlass().setVisible(flag);
				if (!flag) selecionaUltimoComando();
				super.setVisible(flag);
			}
		};
		iframeConsultaApolice.setLocation(x - iframeConsultaApolice.getSize().width / 2, y - iframeConsultaApolice.getSize().height / 2);
		
		iframeConsultaRelatorioApolice = new ConsRelatorioApoliceIFrame(){
			@Override
			public void setVisible(boolean flag) {
				if (getGlass() != null) getGlass().setVisible(flag);
				if (!flag) selecionaUltimoComando();
				super.setVisible(flag);
			}
		};
		iframeConsultaRelatorioApolice.setLocation(x - iframeConsultaRelatorioApolice.getSize().width / 2, y - iframeConsultaRelatorioApolice.getSize().height / 2);
		
		
		getDesktop().add(iframeDependente);
		getDesktop().add(iframeFatura);
		getDesktop().add(iframeApolice);
		getDesktop().add(iframeConsultaApolice);
		getDesktop().add(iframeConsultaRelatorioApolice);
		
		tbApolices = new ApoliceTable();
		tbApolices.getSelectionModel().addListSelectionListener(new EventoTabela());
		tbApolices.addMouseListener(new MouseAdapter(){
			public void mouseClicked(MouseEvent e) {
				if (e.getClickCount() > 1 && btEditar.isEnabled()) btEditar.doClick();
				super.mouseClicked(e);
			}
		});
		tbApolices.addKeyListener(new KeyAdapter(){
			@Override
			public void keyPressed(KeyEvent e) {
				if (e.getKeyCode() == KeyEvent.VK_ENTER) btEditar.doClick();
				else if (e.getKeyCode() == KeyEvent.VK_DELETE) btExcluir.doClick();
				else if (e.getKeyCode() == KeyEvent.VK_INSERT) btNovo.doClick();
				else if (e.getKeyCode() == KeyEvent.VK_F3) btPesquisar.doClick();
				super.keyPressed(e);
			}
		});
	
		
		
		btPesquisar = new JButton();
		btPesquisar.setIcon(new ImageIcon("imagens/search.gif"));
		btPesquisar.addActionListener(new EventoBotaoControle());
		btPesquisar.setToolTipText("Pesquisar apólices!");
		btPesquisar.setPreferredSize(DBUTTON);
		btPesquisar.addKeyListener(tbApolices.getKeyListeners()[0]);
		
		btNovo = new JButton();
		btNovo.setIcon(new ImageIcon("imagens/addContract.gif"));
		btNovo.addActionListener(new EventoBotaoControle());
		btNovo.setToolTipText("Cadastra uma nova apólice!");
		btNovo.setPreferredSize(DBUTTON);
		btNovo.addKeyListener(tbApolices.getKeyListeners()[0]);
		
		btEditar = new JButton();
		btEditar.setIcon(new ImageIcon("imagens/edit.gif"));
		btEditar.addActionListener(new EventoBotaoControle());
		btEditar.setToolTipText("Edita os dados de uma apólice!");
		btEditar.setPreferredSize(DBUTTON);
		btEditar.setEnabled(false);
		btEditar.addKeyListener(tbApolices.getKeyListeners()[0]);
		
		btExcluir = new JButton();
		btExcluir.setIcon(new ImageIcon("imagens/remove.gif"));
		btExcluir.addActionListener(new EventoBotaoControle());
		btExcluir.setToolTipText("Remove uma apólice!");
		btExcluir.setPreferredSize(DBUTTON);
		btExcluir.setEnabled(false);
		btExcluir.addKeyListener(tbApolices.getKeyListeners()[0]);
		
		btDetalhar = new JButton();
		btDetalhar.setIcon(new ImageIcon("imagens/resumeContract.gif"));
		btDetalhar.addActionListener(new EventoBotaoControle());
		btDetalhar.setToolTipText("Exibe o sumário de uma apólice!");
		btDetalhar.setPreferredSize(DBUTTON);
		btDetalhar.setEnabled(false);
		btDetalhar.addKeyListener(tbApolices.getKeyListeners()[0]);

		btRelatorio = new JButton();
		btRelatorio.setIcon(new ImageIcon("imagens/relatorio.gif"));
		btRelatorio.addActionListener(new EventoBotaoControle());
		btRelatorio.setToolTipText("Relatório apólices!");
		btRelatorio.setPreferredSize(DBUTTON);
		btRelatorio.addKeyListener(tbApolices.getKeyListeners()[0]);
		
		barControle = new JToolBar();
		barControle.setFloatable(false);
		barControle.setOpaque(false);
		barControle.setBorderPainted(false);
		barControle.setBorder(BorderFactory.createEmptyBorder());
		barControle.setMargin(new Insets(0, 0, 0, 0));
		barControle.add(btPesquisar);
		barControle.add(btNovo);
		barControle.add(btEditar);
		barControle.add(btExcluir);
		barControle.addSeparator();
		barControle.add(btDetalhar);
		barControle.addSeparator();
		barControle.add(btRelatorio);
	}
	
	private void configure() {
		GridBagConstraints c = new GridBagConstraints();
		JPanel infApolice = new JPanel(new GridBagLayout());

		c.anchor = GridBagConstraints.LAST_LINE_START;
		c.fill = GridBagConstraints.HORIZONTAL;
		c.insets = new Insets(0, 1, 0, 1);
		c.weightx = 1;
		c.weighty = 0;
		c.gridx = 0;
		c.gridy = 0; infApolice.add(barControle, c);
		
		JScrollPane prodPanel = new JScrollPane(tbApolices);
		prodPanel.setBorder(BorderFactory.createLineBorder(Color.GRAY));
		
		c.anchor = GridBagConstraints.FIRST_LINE_START;
		c.fill = GridBagConstraints.BOTH;
		c.weightx = 1;
		c.weighty = 1;
		c.gridx = 0;
		c.gridy = 1; infApolice.add(prodPanel, c);
		
		infApolice.setBorder(BorderFactory.createTitledBorder("Apólices"));
		
		JPanel panelPrincipal = new JPanel(new GridBagLayout()); 
		c = new GridBagConstraints();
		
		c.anchor = GridBagConstraints.CENTER;
		c.fill = GridBagConstraints.HORIZONTAL;
		c.insets = new Insets(1, 1, 1, 1);
		c.weightx = 1;
		c.weighty = 0;
		c.gridx = 0;
		c.gridy = 0; panelPrincipal.add(barNotificacao, c);

		c.anchor = GridBagConstraints.FIRST_LINE_START;
		c.fill = GridBagConstraints.BOTH;
		c.weightx = 1;
		c.weighty = 1;
		c.gridx = 0;
		c.gridy = 1; panelPrincipal.add(infApolice, c);
		
		getPainelPrincipal().add(panelPrincipal, BorderLayout.CENTER);
	}
	
	private class EventoTabela implements ListSelectionListener{
		public void valueChanged(ListSelectionEvent arg0) {
			btEditar.setEnabled(tbApolices.getSelectedRow() > -1);
			btExcluir.setEnabled(tbApolices.getSelectedRow() > -1);
			btDetalhar.setEnabled(tbApolices.getSelectedRow() > -1);
		}
	}
	
	private void loadEditaPanelApolice(ApoliceVO apolice)
	{
		Integer id = null;
		if(apolice != null && apolice.getId() != null && apolice.getId() > 0)
			id = apolice.getId();
		
		try {
			apolice = Controller.getInstance().carregarApolice(id);
		
			Component c = getParent();
			while (!(c instanceof JFrame)){
				if (c == null) break;
				c = c.getParent();
			}
			if (c != null && apolice != null){
				JPanel p = ((FramePrincipal)c).getPainelPrincipal();
				ApoliceEditarMainPanel editPanel = ((FramePrincipal)c).getPEditApolice();
				
				editPanel.setApolice(apolice);
				editPanel.setCopyApoliceTableModel((ApoliceTableModel)tbApolices.getModel());
				
				CardLayout cards = (CardLayout)p.getLayout();
				cards.show(p, ApoliceEditarMainPanel.FORM_NAME);
				
			}
			
			if(apolice == null)
			{
				this.limparModel();
				iframeConsultaApolice.setVisible(true);
				iframeConsultaApolice.habilitarControles(false);
			}
		
		} catch (MensagemSaoDimasException e) {
			barNotificacao.mostrarMensagem(e.getMessage(), BarraNotificacao.ERRO);
			e.printStackTrace();
		}
	}
	
	private class EventoBotaoControle implements ActionListener{
		public void actionPerformed(ActionEvent e) {
			ultimoComando = (AbstractButton)e.getSource();
			if (e.getSource() == btPesquisar){
				iframeConsultaApolice.setVisible(true);
				iframeConsultaApolice.habilitarControles(false);				
			}
			else if (e.getSource() == btNovo){
				iframeApolice.setVisible(true);
				iframeApolice.habilitarControles(false);				
			}
			else if (e.getSource() == btEditar){
				int row = tbApolices.getSelectedRow();
				if (row > -1){
					barNotificacao.escondeMensagem();
					ApoliceTableModel model = (ApoliceTableModel)tbApolices.getModel();
					ApoliceVO apolice = (ApoliceVO)model.getSelectedValue(row);
					loadEditaPanelApolice(apolice);
				}
			}
			else if (e.getSource() == btDetalhar){
				mostraAviso("Aviso", "Visualização da apólice, em breve!", JOptionPane.OK_OPTION);
			}
			else if (e.getSource() == btExcluir){
				if (mostraConfirmacao("Confirmação", "Confirma a exclusão da apólice?", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION){
					int row = tbApolices.getSelectedRow();
					ApoliceTableModel model = (ApoliceTableModel)tbApolices.getModel();
					ApoliceVO apo = (ApoliceVO)model.getSelectedValue(row);
					try{
						Controller.getInstance().deleteApolice(apo);
						model.removeAt(row);
						barNotificacao.mostrarMensagem("Apólice removida com sucesso.", BarraNotificacao.INFO);
					} catch (MensagemSaoDimasException ex) {
						barNotificacao.mostrarMensagem(ex.getMessage(),	BarraNotificacao.ERRO);
					}
					
				}
			}
			
			if (e.getSource() == btRelatorio){
				try {
					new GeradorRelatorio().gerar("RelatorioApoliceCidade.jasper", Controller.getInstance().carregarApolices(((ApoliceTableModel)tbApolices.getModel()).getList()));
				} catch (MensagemSaoDimasException e1) {
					barNotificacao.mostrarMensagem(ex.getMessage(),	BarraNotificacao.ERRO);
				}
								
			}
		}
	}
}
